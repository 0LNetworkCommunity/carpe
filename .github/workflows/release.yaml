name: carpe release

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-11, ubuntu-latest ]
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      # Setup Rust
      - uses: dtolnay/rust-toolchain@1.66.1
        with:
          components: rustfmt

      # Setup Node.js
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      # checkout
      - name: checkout source
        uses: actions/checkout@v3

########  UBUNTU  ########
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential lld pkg-config libclang-dev libwebkit2gtk-4.0-dev libglib2.0-* libssl-dev libgtk-3-dev libappindicator3-dev patchelf librsvg2-dev libvips-dev libgmp-dev
          version: 1.0

########  WIN  ########

      - name: install dependencies (windows only)
        if: matrix.os == 'windows-latest'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        if: matrix.os == 'windows-latest'
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

        # Package the windows dependencies
      - name: copy gmp.dll
        if: matrix.os == 'windows-latest'
        run: |
          $var = (get-item $(rustup which rustc)).Directory.Parent.FullName+ '\lib\rustlib\'  + (rustc -vV | findstr "host:*").split(':')[1].Trim() + '\lib'
          Copy-Item ('${{ github.workspace }}' + '\.github' + '\redist' + '\x86_64\*')  -Destination $var -Recurse

      #          C:\Users\Administrator\.rustup\toolchains\1.66.1-x86_64-pc-windows-msvc\bin\rustc.exe

########  CACHE  ########

      - uses: Swatinem/rust-cache@v2
        with:
           workspaces: ./src-tauri
           shared-key: "libra" # to share across CI builds, so it is not job-id specific
           cache-all-crates: true

########  BUILD  ########

      - name: yarn installation
        run: yarn install

      - name: make canary icon
        if: ${{contains(github.ref, 'canary') }}
        run: yarn tauri icon ./app-icon-canary.png

      - name: pre-build rust
        working-directory: ./src-tauri
        run: cargo b --release

      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # TAURI_PRIVATE_KEY: ${{secrets.TAURI_PRIVATE_KEY}}
          # TAURI_KEY_PASSWORD: ${{secrets.TAURI_KEY_PASSWORD}}

          TAURI_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5N1FKS0ZZM1BwL25GaFdKU0tpNW5XREQyZnZjQTdkVWZSYUZWV0U5YThIUUFBQkFBQUFBQUFBQUFBQUlBQUFBQVp5dlhYNTlMa0c1OHMxK2hxWXNJWHc2VXVRZnRPUVR3TjloZTJTdXIrQnV2aXFSbTczWjNkdTlOU214YXhnVXA3SmNQQ3VzemlMV2ZKTWVNZTA0SWRraHU0VFJGbXI3UXpsTkREditxV1hFWUQ2MlVZam5lSDJ2OFA1Z05hZnY0U21mOWZxZ0JnZUk9Cg==
          TAURI_KEY_PASSWORD: 123456
        with:
          args: ${{contains(github.ref, 'canary') && '--features carpe-canary' || '' }} #pass the rust feature flags for canary if the tag includes "canary"
          tagName: ${{contains(github.ref, 'canary') && 'v__VERSION__' || 'v__VERSION__-canary' }} # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'Carpe v__VERSION__'
          # tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          # releaseName: 'Carpe v__VERSION__'
          releaseBody: '[draft]'
          releaseDraft: true
          prerelease: false
