name: release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: false
        default: 'canary'
        type: choice
        options:
        - canary
        - production
jobs:
  build-and-publish:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, ubuntu-22.04]
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      ### DO NOT REMOVE: uncomment if you need to debug runner ###
      # - name: setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true

      - name: checkout sources
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: 1.84.1
          override: true

      # Setup Node.js
      - name: setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y lld libsoup2.4-dev libgdk3.0-cil-dev libjavascriptcoregtk-4.0-dev libwebkit2gtk-4.0-dev

      - name: install dependencies (windows only)
        if: matrix.os == 'windows-latest'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '11.0'
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        if: matrix.os == 'windows-latest'
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      ########  CACHE  ########
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri
          shared-key: '${{ matrix.os }}'
          cache-on-failure: true

      ########  BUILD  ########
      - name: yarn installation
        run: yarn install
      - name: pre-build rust
        working-directory: ./src-tauri
        run: cargo b --release

      - name: Build Tauri
        id: build-tauri
        uses: tauri-apps/tauri-action@v0.5.1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          TAURI_PRIVATE_KEY: '${{secrets.TAURI_PRIVATE_KEY}}'
          TAURI_KEY_PASSWORD: '${{secrets.TAURI_KEY_PASSWORD}}'
        with:
          args: ${{ github.event.inputs.release_type == 'canary' && '--config src-tauri/tauri.conf.canary.json --features carpe-canary' || '' }}
          # pass the rust feature flags for canary if the tag includes "canary"
          tagName: ${{ github.event.inputs.release_type == 'canary' && 'v__VERSION__-canary' ||  'v__VERSION__' }}
          # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: ${{ github.event.inputs.release_type == 'canary' && 'v__VERSION__-canary' ||  'v__VERSION__' }}
          releaseBody: '[draft]'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
