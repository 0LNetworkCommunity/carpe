name: Build Binaries for Mac

on:
  push:
    tags:
      - '*'
    branches:
      - '*'



jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-20.04, windows-latest ]
    name: Build Binary for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
      #        include:
      #          - os: macos-11
      #            artifact_name: carpe
      #            dir: dmg
      #            asset_name: carpe-macos-11
      # - os: macos-11
      #   artifact_name: carpe
      #   dir: dmg
    #   asset_name: carpe-macos-11
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: rustfmt
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install libwebkit2gtk-4.0-dev libglib2.0-* libssl-dev libgtk-3-dev libappindicator3-dev patchelf librsvg2-dev libvips-dev libgmp-dev -y
      - name: install dependencies (windows only)
        if: matrix.os == 'windows-latest'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
          name: Set LIBCLANG_PATH
          run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          # The prefix cache key, this can be changed to start a new cache manually.
          # default: "v0-rust"
          prefix-key: ""

          # A cache key that is used instead of the automatic `job`-based key,
          # and is stable over multiple jobs.
          # default: empty
          shared-key: ""

          # An additional cache key that is added alongside the automatic `job`-based
          # cache key and can be used to further differentiate jobs.
          # default: empty
          key: ""

          # A whitespace separated list of env-var *prefixes* who's value contributes
          # to the environment cache key.
          # The env-vars are matched by *prefix*, so the default `RUST` var will
          # match all of `RUSTC`, `RUSTUP_*`, `RUSTFLAGS`, `RUSTDOC_*`, etc.
          # default: "CARGO CC CFLAGS CXX CMAKE RUST"
          env-vars: ""

          # The cargo workspaces and target directory configuration.
          # These entries are separated by newlines and have the form
          # `$workspace -> $target`. The `$target` part is treated as a directory
          # relative to the `$workspace` and defaults to "target" if not explicitly given.
          # default: ". -> target"
          workspaces: ""

          # Additional non workspace directories to be cached, separated by newlines.
          cache-directories: ""

          # Determines whether workspace `target` directories are cached.
          # If `false`, only the cargo registry will be cached.
          # default: "true"
          cache-targets: ""

          # Determines if the cache should be saved even when the workflow has failed.
          # default: "false"
          cache-on-failure: ""

          # Determiners whether the cache should be saved.
          # If `false`, the cache is only restored.
          # Useful for jobs where the matrix is additive e.g. additional Cargo features.
          # default: "true"
          save-if: ""
      - name: yarn installation
        run: yarn install
      - name: Build Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5N1FKS0ZZM1BwL25GaFdKU0tpNW5XREQyZnZjQTdkVWZSYUZWV0U5YThIUUFBQkFBQUFBQUFBQUFBQUlBQUFBQVp5dlhYNTlMa0c1OHMxK2hxWXNJWHc2VXVRZnRPUVR3TjloZTJTdXIrQnV2aXFSbTczWjNkdTlOU214YXhnVXA3SmNQQ3VzemlMV2ZKTWVNZTA0SWRraHU0VFJGbXI3UXpsTkREditxV1hFWUQ2MlVZam5lSDJ2OFA1Z05hZnY0U21mOWZxZ0JnZUk9Cg==
          TAURI_KEY_PASSWORD: 123456
#        with:
#          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
#          args: --target universal-apple-darwin
#          releaseName: 'App v__VERSION__'
#          releaseBody: 'See the assets to download this version and install.'
#          releaseDraft: true
#          prerelease: false

#      - name: Rename binary
#        run: mv src-tauri/target/release/bundle/${{ matrix.dir }}/*.${{ matrix.dir}} src-tauri/target/release/bundle/${{ matrix.dir }}/${{matrix.asset_name}}.${{matrix.dir}}
#      - name: Upload binaries to release
#        uses: svenstaro/upload-release-action@v1-release
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: src-tauri/target/release/bundle/${{ matrix.dir }}/*.${{ matrix.dir}}
#          tag: ${{ github.ref }}
#          overwrite: true
#          file_glob: true
#      - name: Upload Updater Builds
#        uses: svenstaro/upload-release-action@v1-release
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: src-tauri/target/release/bundle/macos/*
#          tag: ${{ github.ref }}
#          overwrite: true
#          file_glob: true
