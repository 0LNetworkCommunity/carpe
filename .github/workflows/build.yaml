name: build

on:
  push:
    branches: ['*']

  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - 'release**'
      - 'main'
  schedule:
    - cron: '0 5 * * *'  # Runs at 5am UTC / 1am ET daily
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-latest, ubuntu-22.04]
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      ### DO NOT REMOVE: uncomment if you need to debug runner ###
      # - name: setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true
      # checkout
      # Setup Rust
      - name: checkout sources
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: 1.84.1
          override: true

      # Setup Node.js
      - name: setup node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18

      # Install ld for ubuntu
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y lld libsoup2.4-dev libgdk3.0-cil-dev libjavascriptcoregtk-4.0-dev libwebkit2gtk-4.0-dev

      - name: install dependencies (windows only)
        if: matrix.os == 'windows-latest'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '11.0'
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        if: matrix.os == 'windows-latest'
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV


      ########  CACHE  ########

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri
          shared-key: '${{ matrix.os }}'
          cache-on-failure: true

      ########  BUILD  ########

      - name: yarn installation
        run: yarn install

      - name: pre-build rust
        working-directory: ./src-tauri
        run: cargo b --release

      - name: build tauri
        run: yarn run build:github-pr
        env:
          # Mocked keys.
          TAURI_PRIVATE_KEY: 'dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5ZUYrUFF0RS9ZbU5EN0VFWk52TmpDRDQvTFFWOHhqSXNkZFVvUjZSRWNJc0FBQkFBQUFBQUFBQUFBQUlBQUFBQTZhNUxkYVFJWDNWTENKR2tSNzFVcDhsRzcvd0lKeWRGcytBZDNyZ3o3OWRXOWVmbmZCQktJYk8xOHVHWG5CZ25XN1pBOXM3SjMyWW1DRFNZWFJ5WGxsd3B6d3RvOEtTNHFFbFM5VE5obmNEZ1dHeEljVFRhZ2FXa0RzNHZOVkNESE5DdDArUmkvUUE9Cg=='
          TAURI_KEY_PASSWORD: 'mock'
