name: Build Binaries for Windows

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    name: Build Binary for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@v1
        if: matrix.os == 'windows-latest'
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
          components: rustfmt
      - name: Build
        run: yarn && yarn run tauri build
      - name: Set tag
        run: echo "NOW=v$(date +'%Y%m%d.%H%M%S')" >> $env:GITHUB_ENV # tag: ${{ env.NOW }} for a timestamped tag
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          asset_name: carpe-windows-amd64 # TODO: figure out how to make these conditional on matrix.os
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: src-tauri/target/release/bundle/msi/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
